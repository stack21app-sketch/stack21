name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm run test --if-present
    
    - name: Run Legal Compliance Tests
      run: npm run test:legal --if-present
    
    - name: Run Legal API Tests
      run: npm run test:legal-api --if-present
    
    - name: Run TestSprite Tests
      run: node testsprite_tests/simple_test_runner.js --if-present
    
    - name: Run E2E Tests
      run: npm run test:e2e --if-present
    
    - name: Run Accessibility Tests
      run: npm run test:a11y --if-present
    
    - name: Security Audit
      run: npm run audit:security --if-present
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Generate Prisma Client
      run: npx prisma generate
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    - name: Run database migrations (deploy)
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
        working-directory: ./

  staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    - name: Install dependencies
      run: npm ci
    - name: Generate Prisma Client
      run: npx prisma generate
      env:
        DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
    - name: Run database migrations (staging)
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
    - name: Deploy to Vercel (Preview)
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: ''
        working-directory: ./
    
    - name: Notify deployment
      if: always()
      run: |
        echo "Deployment completed with status: ${{ job.status }}"
