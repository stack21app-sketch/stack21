#!/usr/bin/env node

/**
 * Script para ejecutar la migraci√≥n del Agente AI en Supabase
 * 
 * Este script te guiar√° paso a paso para ejecutar la migraci√≥n
 */

require('dotenv').config();

const fs = require('fs');
const path = require('path');

const colors = {
  green: '\x1b[32m',
  red: '\x1b[31m',
  yellow: '\x1b[33m',
  blue: '\x1b[34m',
  cyan: '\x1b[36m',
  reset: '\x1b[0m',
  bold: '\x1b[1m'
};

function log(message, color = 'reset') {
  console.log(`${colors[color]}${message}${colors.reset}`);
}

async function main() {
  log('üöÄ MIGRACI√ìN DEL AGENTE AI PARA SUPABASE', 'bold');
  log('‚ïê'.repeat(50), 'cyan');
  
  // Verificar variables de entorno
  log('\nüìã Verificando configuraci√≥n...', 'blue');
  
  const requiredEnvVars = [
    'NEXT_PUBLIC_SUPABASE_URL',
    'SUPABASE_SERVICE_ROLE_KEY'
  ];
  
  const missingVars = requiredEnvVars.filter(varName => !process.env[varName]);
  
  if (missingVars.length > 0) {
    log('‚ùå Variables de entorno faltantes:', 'red');
    missingVars.forEach(varName => {
      log(`   - ${varName}`, 'red');
    });
    log('\nüí° Aseg√∫rate de tener un archivo .env con las variables de Supabase', 'yellow');
    return;
  }
  
  log('‚úÖ Variables de entorno configuradas', 'green');
  
  // Leer el archivo de migraci√≥n
  const migrationPath = path.join(__dirname, '../migrations/agent-ai-billing.sql');
  
  if (!fs.existsSync(migrationPath)) {
    log('‚ùå Archivo de migraci√≥n no encontrado:', 'red');
    log(`   ${migrationPath}`, 'red');
    return;
  }
  
  const migrationSQL = fs.readFileSync(migrationPath, 'utf8');
  
  log('‚úÖ Archivo de migraci√≥n encontrado', 'green');
  log(`üìÑ Tama√±o: ${(migrationSQL.length / 1024).toFixed(1)} KB`, 'blue');
  
  // Mostrar informaci√≥n de la migraci√≥n
  log('\nüìä CONTENIDO DE LA MIGRACI√ìN:', 'bold');
  log('‚ïê'.repeat(50), 'cyan');
  
  const migrationParts = [
    { name: 'Tipos enum', desc: 'Plan types (free, pro, premium)' },
    { name: 'Tabla workspaces', desc: 'Agregar campos de plan y AI' },
    { name: 'usage_counters', desc: 'Contadores de uso mensual' },
    { name: 'agent_action_logs', desc: 'Logs de acciones del agente' },
    { name: 'org_faqs', desc: 'FAQs por organizaci√≥n' },
    { name: 'agent_cache', desc: 'Cache de respuestas' },
    { name: 'billing_addons', desc: 'Add-ons de facturaci√≥n' },
    { name: '√çndices', desc: 'Optimizaci√≥n de rendimiento' },
    { name: 'Funciones', desc: 'Helpers para uso y cache' },
    { name: 'Pol√≠ticas RLS', desc: 'Seguridad por organizaci√≥n' },
    { name: 'FAQs ejemplo', desc: 'Datos iniciales' }
  ];
  
  migrationParts.forEach((part, index) => {
    log(`   ${index + 1}. ${part.name}`, 'blue');
    log(`      ${part.desc}`, 'cyan');
  });
  
  // Instrucciones paso a paso
  log('\nüéØ INSTRUCCIONES PARA EJECUTAR LA MIGRACI√ìN:', 'bold');
  log('‚ïê'.repeat(50), 'cyan');
  
  log('\n1Ô∏è‚É£ Abre tu panel de Supabase:', 'blue');
  log('   ‚Ä¢ Ve a https://supabase.com/dashboard', 'cyan');
  log('   ‚Ä¢ Selecciona tu proyecto', 'cyan');
  
  log('\n2Ô∏è‚É£ Abre el SQL Editor:', 'blue');
  log('   ‚Ä¢ En el men√∫ lateral, haz clic en "SQL Editor"', 'cyan');
  log('   ‚Ä¢ Haz clic en "New Query"', 'cyan');
  
  log('\n3Ô∏è‚É£ Copia y pega el SQL:', 'blue');
  log('   ‚Ä¢ Copia TODO el contenido del archivo de migraci√≥n', 'cyan');
  log('   ‚Ä¢ P√©galo en el editor SQL', 'cyan');
  
  log('\n4Ô∏è‚É£ Ejecuta la migraci√≥n:', 'blue');
  log('   ‚Ä¢ Haz clic en "Run" (o Ctrl+Enter)', 'cyan');
  log('   ‚Ä¢ Espera a que termine (puede tomar 30-60 segundos)', 'cyan');
  
  log('\n5Ô∏è‚É£ Verifica el resultado:', 'blue');
  log('   ‚Ä¢ Deber√≠as ver "Success. No rows returned"', 'cyan');
  log('   ‚Ä¢ Ve a "Table Editor" para verificar las nuevas tablas', 'cyan');
  
  // Mostrar el SQL completo
  log('\nüìÑ CONTENIDO COMPLETO DE LA MIGRACI√ìN:', 'bold');
  log('‚ïê'.repeat(50), 'cyan');
  log('(Copia desde aqu√≠ hasta el final)', 'yellow');
  log('', 'reset');
  
  console.log(migrationSQL);
  
  log('\nüéâ DESPU√âS DE EJECUTAR LA MIGRACI√ìN:', 'bold');
  log('‚ïê'.repeat(50), 'cyan');
  
  log('\n‚úÖ Podr√°s probar:', 'green');
  log('   ‚Ä¢ POST /api/agent/public - Chat p√∫blico del agente', 'blue');
  log('   ‚Ä¢ GET /api/usage/current - Estado de uso actual', 'blue');
  log('   ‚Ä¢ /settings/billing - UI de gesti√≥n de planes', 'blue');
  
  log('\n‚úÖ El sistema incluir√°:', 'green');
  log('   ‚Ä¢ 3 planes de suscripci√≥n (Free/Pro/Premium)', 'blue');
  log('   ‚Ä¢ Control de l√≠mites autom√°tico', 'blue');
  log('   ‚Ä¢ Cache inteligente para FAQs', 'blue');
  log('   ‚Ä¢ Monitoreo de uso en tiempo real', 'blue');
  log('   ‚Ä¢ Sistema de facturaci√≥n preparado', 'blue');
  
  log('\nüöÄ ¬°Tu Agente AI estar√° listo para generar ingresos!', 'bold');
}

// Ejecutar si es llamado directamente
if (require.main === module) {
  main().catch(console.error);
}

module.exports = { main };
